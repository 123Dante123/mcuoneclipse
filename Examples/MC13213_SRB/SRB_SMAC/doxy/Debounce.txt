/*!
\page page_Debounce Lab: Debouncing
\author Erich Styger, erich.styger@hslu.ch

\section s_requirement Requirements
- First, make sure you see the keys bouncing (as we want to see the result of our hard work :-) )
- Support both platforms
  - Tower Board
  - SRB Board
- Debounce the 4 keys on the SRB and the 2 keys on the Tower
- Watch out: the reset button is very close to the other two button on the tower board!
- Make sure your debouncing works in a fully reentrant way
- Detect short and long key press
- Write a message (short or long key press) to the shell.
  Use events to do this (don't do it directly in the interrupt service routine)

\section s_hints Hints
- Implement debouncing of the keys. Use your previous work as base.
- Use ::TRG_KEYPRESS as trigger to transition through the state machine
- Test the functionality
- have fun :-)  

\section s_journal Questions
- We are using events like EVNT_SW0_PRESSED instead of performing directly the actions resulting on a key press.
  Why are we doing this?
- Debouncing could be done in a simpler way without a state machine like we did it here. What is the advantage/disadvantage using the state machine method?
- Summarize what you have learned implementing debouncing using simple triggers and a state machine.
- Notice the small delay between the time the interrupt (S08 KBI) happens, and until when we store the key value (scanValue).
  Think about potential problems with this approach. How could this be solved or at least minimized?
*/
