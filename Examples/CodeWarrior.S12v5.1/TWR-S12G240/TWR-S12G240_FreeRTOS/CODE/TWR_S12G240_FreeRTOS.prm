/*
** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : TWR_S12G240_FreeRTOS.PRM
**     Project   : TWR_S12G240_FreeRTOS
**     Processor : MC9S12G240CLL
**     Compiler  : CodeWarrior HC12 C Compiler
**     Date/Time : 14.04.2020, 09:46
**     Abstract  :
**        This file is used by the linker. It describes files to be linked,
**        memory ranges, stack size, etc. For detailed description of the PRM file
**        see CodeWarrior documentation. This file is generated by default.
**        You can switch off generation by setting the property
**        "Generate PRM file = no" on the "Build options" tab in CPU component and then modify
**        this file if needed.
**
**     Copyright : 1997 - 2011 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################
*/

NAMES

END

SEGMENTS  /* Here all RAM/ROM areas of the device are listed. Used in PLACEMENT below. */
      RAM           = READ_WRITE    0x1400 TO   0x3FFF;
      ROM_C000      = READ_ONLY     0xC000 TO   0xFEFF;
      PAGE_01       = READ_ONLY   0x018000 TO 0x01BFFF;
      PAGE_02       = READ_ONLY   0x028000 TO 0x02BFFF;
      PAGE_03       = READ_ONLY   0x038000 TO 0x03BFFF;
      PAGE_04       = READ_ONLY   0x048000 TO 0x04BFFF;
      PAGE_05       = READ_ONLY   0x058000 TO 0x05BFFF;
      PAGE_06       = READ_ONLY   0x068000 TO 0x06BFFF;
      PAGE_07       = READ_ONLY   0x078000 TO 0x07BFFF;
      PAGE_08       = READ_ONLY   0x088000 TO 0x08BFFF;
      PAGE_09       = READ_ONLY   0x098000 TO 0x09BFFF;
      PAGE_0A       = READ_ONLY   0x0A8000 TO 0x0ABFFF;
      PAGE_0B       = READ_ONLY   0x0B8000 TO 0x0BBFFF;
      PAGE_0C       = READ_ONLY   0x0C8000 TO 0x0CBFFF;
      PAGE_0E       = READ_ONLY   0x0E8000 TO 0x0EBFFF;
END

PLACEMENT /* here all predefined and user segments are placed into the SEGMENTS defined above. */
      _PRESTART,              /* Used in HIWARE format: jump to _Startup at the code start */
      STARTUP,                /* startup data structures */
      ROM_VAR,                /* constant variables */
      STRINGS,                /* string literals */
      NON_BANKED,             /* runtime routines which must not be banked */
      COPY              INTO  ROM_C000;

      DEFAULT_ROM       INTO  PAGE_0E, PAGE_0C, PAGE_0B, PAGE_0A, PAGE_09, PAGE_08, PAGE_07, PAGE_06, 
                              PAGE_05, PAGE_04, PAGE_03, PAGE_02, PAGE_01;

      DEFAULT_RAM             /* all variables, the default RAM location */
                        INTO  RAM;
END

INIT _EntryPoint                       /* The entry point of the application. This function is generated into the CPU module. */

STACKSIZE 0x0080                       /* Size of the system stack. Value can be changed on the "Build options" tab */
